import{_ as s}from"./chunks/scriptDefer.20fdaed5.js";import{_ as e,o as a,c as o,Q as l}from"./chunks/framework.45bffcbf.js";const n=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"docs/interview/html-css.md","lastUpdated":1698229173000}'),c={name:"docs/interview/html-css.md"},p=[l('<h2 id="html5-特性有哪些" tabindex="-1">HTML5 特性有哪些？ <a class="header-anchor" href="#html5-特性有哪些" aria-label="Permalink to &quot;HTML5 特性有哪些？&quot;">​</a></h2><ol><li><p>多媒体，用于媒介回放的 <code>video</code> 和 <code>audio</code> 元素。</p></li><li><p>图像效果，用于绘画的 <code>canvas</code> 元素，<code>svg</code> 元素等。</p></li><li><p>离线&amp;存储，对本地离线存储能够更好地支持，比如 <code>localstorage,Cookies</code> 等。</p></li><li><p>性能与集成特性，<code>HTML5</code> 会通过 <code>XML HttpRequest2</code>等技术，帮助您的 <code>Web</code> 应用和网站在多样化的环境中更快速地工作</p></li></ol><h2 id="meta-标签-都有一些什么特性-有什么作用" tabindex="-1">Meta 标签，都有一些什么特性，有什么作用 ？ <a class="header-anchor" href="#meta-标签-都有一些什么特性-有什么作用" aria-label="Permalink to &quot;Meta 标签，都有一些什么特性，有什么作用 ？&quot;">​</a></h2><p><strong>什么是 <code>meta</code> 标签</strong>：<code>&lt;meta&gt;</code> 标签提供关于 HTML 文档的元数据，它不会显示在页面上，但是对于机器是可读 的，可用于浏览器（如何显示内容或重新加载页面），搜索引擎（关键词），或其他 web 服务。</p><p><strong>meta 的作用</strong>：<code>meta</code> 里的数据是供机器解读的，告诉机器该如何解析这个页面，还有一个用途是可以添加服 务器发送到浏览器的 <code>HTTP</code> 头部内容。</p><p><strong>常用 <code>meta</code> 标签总结</strong>：</p><ul><li><code>Charset</code>：它是声明文档使用的字符编码，以防乱码，而且一定要写在第一行</li><li><code>Viewport</code>： 主要是影响移动端页面布局的。</li></ul><h2 id="前端需要注意哪些-seo" tabindex="-1">前端需要注意哪些 SEO <a class="header-anchor" href="#前端需要注意哪些-seo" aria-label="Permalink to &quot;前端需要注意哪些 SEO&quot;">​</a></h2><ol><li>合理的 <code>title</code>、 <code>description</code>、 <code>keywords</code>：搜索对着三项的权重逐个减小，<code>title</code> 值强调重点即可，重要关键词出现不要超过 2 次，而且要靠前，不同⻚⾯<code>title</code> 要有所不同；<code>description</code> 把⻚⾯内容高度概括，⻓度合适，不可过分堆砌关键词，不同⻚⾯ <code>description</code> 有所不同；<code>keywords</code> 列举出重要关键词即可。</li><li>语义化的 <code>HTML</code> 代码，符合 <code>W3C</code> 规范：语义化代码让搜索引擎容易理解网⻚</li><li>重要内容 <code>HTML</code> 代码放在最前：搜索引擎抓取 <code>HTML</code> 顺序是从上到下， 有的搜索引擎对抓 取⻓度有限制，保证重要内容⼀定会被抓取</li><li>重要内容不要用 <code>js</code> 输出：爬虫不会执⾏ <code>js</code> 获取内容</li><li>少用 <code>iframe</code>，搜索引擎不会抓取 <code>iframe</code> 中的内容</li><li>⾮装饰性图片必须加 <code>alt</code></li><li>提高网站速度：网站速度是搜索引擎排序的⼀个重要指标</li></ol><h2 id="什么是渐进式渲染" tabindex="-1">什么是渐进式渲染 ？ <a class="header-anchor" href="#什么是渐进式渲染" aria-label="Permalink to &quot;什么是渐进式渲染 ？&quot;">​</a></h2><p>指打开页面先加载首屏显示的内容，之后再随着时间或者滚动页面才进行后面的加载 。</p><h2 id="对-html-语义化的理解" tabindex="-1">对 HTML 语义化的理解 <a class="header-anchor" href="#对-html-语义化的理解" aria-label="Permalink to &quot;对 HTML 语义化的理解&quot;">​</a></h2><p>语义化是指根据内容的结构化（内容语义化），选择合适的标签（代码语义化）。通俗来讲就是用正确的标签做正确的事情。</p><p>对机器友好，更适合搜索引擎的爬虫爬取有效信息，有利于 SEO。除此之外，语义类还支持读屏软件。</p><p>对开发者友好，使用语义类标签增强了可读性，结构更加清晰，便于团队的开发与维护。</p><div class="tip custom-block"><p class="custom-block-title">常见的语义化标签</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 头部 --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">header</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 导航栏 --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">nav</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">nav</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 区块 有语义的 div --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">section</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 主要区域 --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">main</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">main</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 主要内容 --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">article</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">article</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 侧边栏 --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">aside</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">aside</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 底部 --&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">footer</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">footer</span><span style="color:#89DDFF;">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div></div><h2 id="doctype-文档类型-的作用" tabindex="-1">DOCTYPE(⽂档类型) 的作⽤ <a class="header-anchor" href="#doctype-文档类型-的作用" aria-label="Permalink to &quot;DOCTYPE(⽂档类型) 的作⽤&quot;">​</a></h2><p><code>DOCTYPE</code> 是 <code>HTML5</code> 中一种标准通用标记语言的文档类型声明，它的目 的是告诉浏览器（解析器）应该以什么样（<code>html</code> 或 <code>xhtml</code>）的文档类 型定义来解析文档</p><h2 id="script-标签中-defer-和-async-的区别" tabindex="-1">script 标签中 defer 和 async 的区别 <a class="header-anchor" href="#script-标签中-defer-和-async-的区别" aria-label="Permalink to &quot;script 标签中 defer 和 async 的区别&quot;">​</a></h2><p>如果没有 <code>defer</code> 或 <code>async</code> 属性，浏览器会立即加载并执行相应的脚本。 它不会等待后续加载的文档元素，读取到就会开始加载和执行，这样 就阻塞了后续文档的加载。</p><p><img src="'+s+'" alt="scriptDefer"></p><p>其中蓝色代表 <code>js</code> 脚本网络加载时间，红色代表 <code>js</code> 脚本执行时间，绿色代表 <code>html</code> 解析。</p><p><code>defer</code> 和 <code>async</code> 属性都是去异步加载外部的 <code>JS</code> 脚本文件，它们都不 会阻塞页面的解析，其区别如下：</p><ul><li>执行顺序：多个带 <code>async</code> 属性的标签，不能保证加载的顺序；</li><li>多个带 <code>defer</code> 属性的标签，按照加载顺序执行；</li></ul><h2 id="行内元素有哪些-块级元素有哪些-空-void-元素有哪那些" tabindex="-1">行内元素有哪些？块级元素有哪些？ 空(void)元素有哪那些？ <a class="header-anchor" href="#行内元素有哪些-块级元素有哪些-空-void-元素有哪那些" aria-label="Permalink to &quot;行内元素有哪些？块级元素有哪些？ 空(void)元素有哪那些？&quot;">​</a></h2><p>行内元素有：<code>a</code> <code>b</code> <code>span</code> <code>img</code> <code>input</code> <code>select</code> <code>strong</code>；</p><p>块级元素有：<code>div</code> <code>ul</code> <code>ol</code> <code>li</code> <code>dl</code> <code>dt</code> <code>dd</code> <code>h1</code> <code>h2</code> <code>h3</code> <code>h4</code> <code>h5</code> <code>h6</code> <code>p</code>；</p><p>空元素，即没有内容的 HTML 元素。常见的有：<code>&lt;br&gt;</code>、<code>&lt;hr&gt;</code>、<code>&lt;img&gt;</code>、<code>&lt;input&gt;</code>、<code>&lt;link&gt;</code>、<code>&lt;meta&gt;</code>；</p><h2 id="link-和-import-的区别" tabindex="-1">link 和 @import 的区别 <a class="header-anchor" href="#link-和-import-的区别" aria-label="Permalink to &quot;link 和 @import 的区别&quot;">​</a></h2><ul><li><code>link</code> 引用 <code>CSS</code> 时，在页面载入时同时加载；<code>@import</code> 需要页面网页完 全载入以后加载。</li><li><code>link</code> 是 <code>XHTML</code> 标签，无兼容问题；<code>@import</code> 是在 <code>CSS2.1</code> 提出的，低 版本的浏览器不支持。</li></ul><p><code>link</code> 支持使用 <code>Javascript</code> 控制 <code>DOM</code> 去改变样式；而<code>@import</code> 不支持。</p><h2 id="src-和-href-的区别" tabindex="-1">src 和 href 的区别 <a class="header-anchor" href="#src-和-href-的区别" aria-label="Permalink to &quot;src 和 href 的区别&quot;">​</a></h2><p><code>src</code> 用于替换当前元素， <code>href</code> 用于在当前⽂档和引用资源之间确立联系。</p><ul><li><code>src</code> 是 <code>source</code> 的缩写，指向外部资源的位置，指向的内容将会嵌⼊到⽂档中当前标签所 在位置；在请求 <code>src</code> 资源时会将其指向的资源下载并应用到⽂档内，例如 <code>js</code> 脚本， <code>img</code> 图片和 <code>frame</code> 等元素。</li><li><code>href</code> 是 <code>Hypertext Reference</code> 的缩写，指向⽹络资源所在位置， 建立和当前元素 (锚点) 或当前⽂档 (链接) 之间的链接， 如果我们在⽂档中添加 <code>&lt;link href=&quot;common.css&quot; rel=&quot;stylesheet&quot;/&gt;</code> 那么浏览器会识别该⽂档为 <code>css</code> ⽂件，就会并⾏下载资源并且不会停止对当前⽂档的处理 。这也是为什么建议使用 <code>link</code> ⽅ 式来加载 <code>css</code>， 而不是使用<code> @import</code> ⽅式。</li></ul><h2 id="base64-的缺点和优点" tabindex="-1">base64 的缺点和优点 <a class="header-anchor" href="#base64-的缺点和优点" aria-label="Permalink to &quot;base64 的缺点和优点&quot;">​</a></h2><p>有点是可以加密，减少网站的 <code>http</code> 请求，缺点就是消耗 <code>CPU</code> 的性能进行解码和编码。</p><h2 id="css3-中有哪些新特性" tabindex="-1">CSS3 中有哪些新特性 <a class="header-anchor" href="#css3-中有哪些新特性" aria-label="Permalink to &quot;CSS3 中有哪些新特性&quot;">​</a></h2><ul><li><code>border-radius</code> 圆角属性 <code>border-radius: 10px;</code></li><li><code>text-shadow</code> 文字阴影 <code>text-shadow: 1px 1px 2px black;</code></li><li><code>gradient</code> 线性渐变 <code>background: linear-gradient(blue, pink);</code></li><li><code>transform</code> 位移，旋转，缩放 <code>transform: translate(50px 50px);</code></li><li><code>transition</code> 过渡 <code>transtion: all .3s ease;</code></li><li><code>animation</code> 动画 <code>animation: 3s ease-in 1s infinite reverse both running slidein;</code></li></ul><h2 id="css-选择器及优先级" tabindex="-1">CSS 选择器及优先级 <a class="header-anchor" href="#css-选择器及优先级" aria-label="Permalink to &quot;CSS 选择器及优先级&quot;">​</a></h2><p>选择器</p><ul><li><code>id</code> 选择器(<code>#myid</code>)</li><li>类选择器(<code>.myclass</code>)</li><li>属性选择器(<code>a[rel=&quot;external&quot;]</code>)</li><li>伪类选择器(<code>a:hover, li:nth-child</code>)</li><li>标签选择器(<code>div, h1,p</code>)</li><li>相邻选择器（<code>h1 + p</code>）</li><li>子选择器(<code>ul &gt; li</code>)</li><li>后代选择器(<code>li a</code>)</li><li>通配符选择器(<code>\\*</code>)</li></ul><p>优先级</p><ul><li><code>!important</code></li><li>内联样式（1000）</li><li>ID 选择器（0100）</li><li>类选择器/属性选择器/伪类选择器（0010）</li><li>元素选择器/伪元素选择器（0001）</li><li>关系选择器/通配符选择器（0000）</li></ul><h2 id="对-csssprites-的理解" tabindex="-1">对 CSSSprites 的理解 <a class="header-anchor" href="#对-csssprites-的理解" aria-label="Permalink to &quot;对 CSSSprites 的理解&quot;">​</a></h2><p>将一个页面涉及到的所有图片都包含到一张 大图中去，然后利用 <code>CSS</code> 的 <code>background-image</code>，<code>background-repeat</code>， <code>background-position</code> 属性的组合进行背景定位。</p><p>优点：利用 <code>CSS Sprites</code> 能很好地减少网页的 <code>http</code> 请求，提高页面的性能。</p><p>缺点：开发比较麻烦。</p><h2 id="display-的-block、inline-和-inline-block-的区别" tabindex="-1">display 的 block、inline 和 inline-block 的区别 <a class="header-anchor" href="#display-的-block、inline-和-inline-block-的区别" aria-label="Permalink to &quot;display 的 block、inline 和 inline-block 的区别&quot;">​</a></h2><ul><li><code>block</code>：会独占一行，可以设置 <code>width</code>、 <code>height</code>、<code>margin</code> 和 <code>padding</code> 属性；</li><li><code>inline</code>：元素不会独占一行，<code>width</code>、<code>height</code>属性无效。水平 <code>margin</code> <code>padding</code> 有效，垂直无效。</li><li><code>inline-block</code>：元素不会独占一行，可以设置 <code>width</code>、 <code>height</code>、<code>margin</code> 和 <code>padding</code> 属性；</li></ul><h2 id="盒子模型类型" tabindex="-1">盒子模型类型 <a class="header-anchor" href="#盒子模型类型" aria-label="Permalink to &quot;盒子模型类型&quot;">​</a></h2><ul><li>IE 盒模型：盒子大小计算方式，指的是 <code>width + height + padding + border</code> 。</li><li>W3C 标准盒模型：盒子大小计算 <code>width + height</code>，不包含 <code>border</code> 和 <code>padding</code> 。</li></ul><h2 id="css-优化和提高性能的方法有哪些" tabindex="-1">CSS 优化和提高性能的方法有哪些？ <a class="header-anchor" href="#css-优化和提高性能的方法有哪些" aria-label="Permalink to &quot;CSS 优化和提高性能的方法有哪些？&quot;">​</a></h2><ol><li>css 压缩减小文件体积。</li><li>css 单一样式，比如 <code>margin: 10px 0;</code> 可以写成 <code>margin-top: 10px; margin-bottom: 10px;</code> 执行效率会更高</li><li>减少使用<code>@import</code> 因为他会等待页面加载完成之后才会加载。建议使用 <code>link</code></li><li>避免使用通配符选择器 <code>* {}</code>，标签选择器，而是使用 <code>class</code></li></ol><h2 id="常见的-css-布局单位" tabindex="-1">常见的 CSS 布局单位 <a class="header-anchor" href="#常见的-css-布局单位" aria-label="Permalink to &quot;常见的 CSS 布局单位&quot;">​</a></h2><ul><li><code>px</code>: 像素单位</li><li><code>rpx</code>: 小程序布局单位</li><li><code>%</code>: 相对于父元素的百分比单位</li><li><code>em</code>: 相对单位 <code>1em</code> 等同于父元素的文字大小</li><li><code>rem</code>: 相对单位 <code>1rem</code> 等同于 <code>html</code> 根元素的文字大小</li><li><code>vh</code>: 相对单位 <code>1vh</code> 等同于屏幕高度的 <code>1%</code></li><li><code>vw</code>: 相对单位 <code>1vw</code> 等同于屏幕快读的 <code>1%</code></li><li><code>vmin</code>: 选取 <code>vh</code> 和 <code>vw</code> 的最小值为基准</li><li><code>vmax</code>: 选取 <code>vh</code> 和 <code>vw</code> 的最大值为基准</li></ul><h2 id="水平垂直居中的实现" tabindex="-1">水平垂直居中的实现 <a class="header-anchor" href="#水平垂直居中的实现" aria-label="Permalink to &quot;水平垂直居中的实现&quot;">​</a></h2><details class="details custom-block"><summary>利用绝对定位，设置 <code>left: 50%</code> 和 <code>top: 50%</code> 现将子元素左上角移到父元素中心位置，然后再通过 <code>translate</code> 来调整子元素的中心点到父元素的中心。该方法可以不定宽高。</summary><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">father</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">son</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translate</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br></div></div></details><details class="details custom-block"><summary>利用绝对定位，设置 <code>left: 50%</code> 和 <code>top: 50%</code> 现将子元素左上角移到父元素中心位置，然后再通过 <code>margin-left</code> 和 <code>margin-top</code> 以子元素自己的一半宽高进行负值赋值</summary><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">father</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">son</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200px</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin-left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-100px</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin-top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-100px</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div></details><details class="details custom-block"><summary>利用绝对定位，子元素所有方向都为 <code>0</code> ，将 margin 设置为 <code>auto</code> ，由于宽高固定，对应方向实现平分</summary><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">father</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">son</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">right</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">bottom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0px</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> auto</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">100px</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></details><details class="details custom-block"><summary>利用 flex</summary><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">father</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></details><h2 id="对-bfc-的理解-如何创建-bfc" tabindex="-1">对 BFC 的理解，如何创建 BFC <a class="header-anchor" href="#对-bfc-的理解-如何创建-bfc" aria-label="Permalink to &quot;对 BFC 的理解，如何创建 BFC&quot;">​</a></h2><p>块格式化上下文（<code>Block Formatting Context</code>）是 Web 页面的 可视化 <code>CSS</code> 渲染的一部分，是布局过程中生成块级盒子的区域，也是 浮动元素与其他元素的交互限定区域。</p><p>通俗来讲：<code>BFC</code> 是一个独立的布局环境，可以理解为一个容器，在这 个容器中按照一定规则进行物品摆放，并且不会影响其它环境中的物 品。如果一个元素符合触发 <code>BFC</code> 的条件，则 <code>BFC</code> 中的元素布局不受外 部影响。</p><p>创建 BFC 的条件：</p><ul><li>根元素：<code>body</code>；</li><li>元素设置浮动：<code>float</code> 除 <code>none</code> 以外的值；</li><li>元素设置绝对定位：<code>position (absolute、fixed)</code>；</li><li><code>display</code> 值为：<code>inline-block</code>、<code>table-cell</code>、<code>table-caption</code>、<code>flex</code> 等；</li><li><code>overflow</code> 值为：<code>hidden</code>、<code>auto</code>、<code>scroll</code>；</li></ul><p><code>BFC</code> 的特点：</p><ul><li>垂直方向上，自上而下排列，和文档流的排列方式一致。</li><li>在 <code>BFC</code> 中上下相邻的两个容器的 <code>margin</code> 会重叠，计算 <code>BFC</code> 的高度时，需要计算浮动元素的高度</li><li><code>BFC</code> 区域不会与浮动的容器发生重叠</li><li><code>BFC</code> 是独立的容器，容器内部元素不会影响外部元素，每个元素的左 <code>margin</code> 值和容器的左 <code>border</code> 相接触</li></ul><p><code>BFC</code> 的作用：</p><ul><li>解决 <code>margin</code> 的重叠问题：由于 BFC 是一个独立的区域，内部的元素 和外部的元素互不影响，将两个元素变为两个 <code>BFC</code>，就解决了 <code>margin</code> 重叠的问题。</li><li>解决高度塌陷的问题：在对子元素设置浮动后，父元素会发生高度塌陷。解决这个问题，只需要把父元素变成一个 <code>BFC</code>。常用的办法是给父元素设置 <code>overflow:hidden</code>。</li></ul><h2 id="display-none-opacity-0-visibility-hidden-有什么区别" tabindex="-1">display: none, opacity: 0, visibility: hidden 有什么区别？ <a class="header-anchor" href="#display-none-opacity-0-visibility-hidden-有什么区别" aria-label="Permalink to &quot;display: none, opacity: 0, visibility: hidden 有什么区别？&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>display: none</code> 隐藏后不占位置，子元素不会显示，事件不会触发，<code>transtion</code> 无效；</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>visibility: hidden</code> 隐藏后占位置，会被子元素继承，可以让子元素设置 <code>visibility: visable</code> 显示，不会触发事件，<code>transtion</code> 无效；</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p><code>opacity: 0</code> 隐藏后占位置，会被子元素继承, 但是无法设置子元素显示。事件可以触发，<code>transtion</code> 有效；</p></div><h2 id="使用-css-实现隐藏元素的方式有几种" tabindex="-1">使用 CSS 实现隐藏元素的方式有几种 ？ <a class="header-anchor" href="#使用-css-实现隐藏元素的方式有几种" aria-label="Permalink to &quot;使用 CSS 实现隐藏元素的方式有几种 ？&quot;">​</a></h2><ol><li><p><code>Opacity</code>: 设置一个元素的透明度 <code>.hide{opacity:0;}</code></p></li><li><p><code>Visibility</code> <code>.hide{visibility:hidden}</code></p></li><li><p><code>Display</code>: 确保元素不可见并且连盒模型也不生成 <code>.hide{display:none}</code></p></li><li><p><code>Position</code> <code>.hide{position:absolute; top:-9999px; left:-9999px;}</code></p></li></ol><h2 id="iframe-有那些缺点" tabindex="-1">iframe 有那些缺点？ <a class="header-anchor" href="#iframe-有那些缺点" aria-label="Permalink to &quot;iframe 有那些缺点？&quot;">​</a></h2><ol><li><code>iframe</code> 会阻塞主⻚⾯的 <code>Onload</code> 事件</li><li>搜索引擎的检索程序无法解读这种⻚⾯，不利于 <code>SEO</code></li><li><code>iframe</code> 和主⻚⾯共享连接池， 而浏览器对相同域的连接有限制，所以会影响⻚⾯的并⾏加载</li><li>使用 <code>iframe</code> 之前需要考虑这两个缺点 。如果需要使用 <code>iframe</code>，最好是通过 <code>javascript</code> 动态给 <code>iframe</code> 添加 <code>src</code> 属性值，这样可以绕开以上两个问题。</li></ol>',77)];const i=e(c,[["render",function(s,e,l,n,c,i){return a(),o("div",null,p)}]]);export{n as __pageData,i as default};
