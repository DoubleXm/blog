import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.45bffcbf.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/py/basic/装饰器.md","lastUpdated":1693540559000}'),o={name:"docs/py/basic/装饰器.md"},e=[l('<h2 id="装饰器" tabindex="-1">装饰器 <a class="header-anchor" href="#装饰器" aria-label="Permalink to &quot;装饰器&quot;">​</a></h2><p>对函数或者类使用，用来修改函数或者类的功能，在开始之前，请牢记一个思想：<strong>开放封闭原则。对拓展开放，对修改封闭</strong></p><p>假设我们现在有一个方法，可以打印任务执行进度如下:</p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> rich</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">progress </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> track</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;">  time</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task_progress</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">progress</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> step </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">track</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">range</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">progress</span><span style="color:#89DDFF;">)):</span></span>\n<span class="line"><span style="color:#A6ACCD;">        time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0.02</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>现在有个需求，想要知道这个任务一共执行了多少时间？</p><p>第一想法：最简单，但是不符合 开放封闭原则。</p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task_progress</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">progress</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">    start </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> step </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">track</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">range</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">progress</span><span style="color:#89DDFF;">)):</span></span>\n<span class="line"><span style="color:#A6ACCD;">        time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0.02</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    end </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;程序的执行时间为 </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">end </span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;"> start</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#82AAFF;">task_progress</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>第二想法：利用闭包，高度封装，很合适，但是有点问题</p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">outer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">inner</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">        start </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">(*</span><span style="color:#82AAFF;">args</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">**</span><span style="color:#82AAFF;">kwargs</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        end </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;程序的执行时间为 </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">end </span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;"> start</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 虽然可以通过这种方式解决副作用，但是属性太多，这样做不合适</span></span>\n<span class="line"><span style="color:#A6ACCD;">    inner</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">__name__ </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> func</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">__name__</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> inner</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 因为是弱类型语言，所以可以重新赋值，但是不优雅</span></span>\n<span class="line"><span style="color:#A6ACCD;">task_progress </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">outer</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">task_progress</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#82AAFF;">task_progress</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 重新赋值的副作用就是</span></span>\n<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">task_progress</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">__name__</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># inner, 可见它本身并不是 task_progress</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>问题一解决：让 <code>inner</code> 彻底变成 <code>task_progress</code></p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> functools </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> wraps</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">outer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 它会把所有的属性都指向 func -&gt; task_progress</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">wraps</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">inner</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">        start </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">(*</span><span style="color:#82AAFF;">args</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">**</span><span style="color:#82AAFF;">kwargs</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        end </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;程序的执行时间为 </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">end </span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;"> start</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> inner</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>问题二解决：使用优雅的方法调用 <code>task_progress</code> 不要重新赋值了。</p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 完整代码</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> rich</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">progress </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> track</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> functools </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> wraps</span></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;">  time</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 使用 other 总归不雅修改名字为 counter_time</span></span>\n<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">counter_time</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">wraps</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">inner</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">        start </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">(*</span><span style="color:#82AAFF;">args</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">**</span><span style="color:#82AAFF;">kwargs</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        end </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">time</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;程序的执行时间为 </span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">end </span><span style="color:#89DDFF;">-</span><span style="color:#82AAFF;"> start</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> inner</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">counter_time</span></span>\n<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">task_progress</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">progress</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">int</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> step </span><span style="color:#89DDFF;font-style:italic;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">track</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">range</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">progress</span><span style="color:#89DDFF;">)):</span></span>\n<span class="line"><span style="color:#A6ACCD;">        time</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">sleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0.02</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#82AAFF;">task_progress</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">100</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="装饰器模板" tabindex="-1">装饰器模板 <a class="header-anchor" href="#装饰器模板" aria-label="Permalink to &quot;装饰器模板&quot;">​</a></h2><p>符合该条件的都可以使用 <code>@xx</code> 进行调用</p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">outer</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">wraps</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">inner</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">(*</span><span style="color:#82AAFF;">args</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">**</span><span style="color:#82AAFF;">kwargs</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 被装饰的函数</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> inner </span><span style="color:#676E95;font-style:italic;"># 被装饰函数的包装</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">fn </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">outer</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#82AAFF;">fn</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;"># 被装饰函数的包装，调用时可以传入任意参数</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 语法糖</span></span>\n<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">outer</span></span>\n<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">():</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;font-style:italic;">pass</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h2 id="带参数的装饰器" tabindex="-1">带参数的装饰器 <a class="header-anchor" href="#带参数的装饰器" aria-label="Permalink to &quot;带参数的装饰器&quot;">​</a></h2><p>与 <code>wraps</code> 类似，就是带参数的装饰器，带参数的装饰就是在 <code>wrapper</code> 的外层在包装一层函数用来传递参数</p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> functools </span><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> wraps</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">auth</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">token</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">wrapper</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">wraps</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">inner</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> token </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">(*</span><span style="color:#82AAFF;">args</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">**</span><span style="color:#82AAFF;">kwargs</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">                </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">用户未授权</span><span style="color:#89DDFF;">&quot;</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> inner</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> wrapper</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">auth</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">admin</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_user_info</span><span style="color:#89DDFF;">():</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">name</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">zs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">age</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">25</span><span style="color:#89DDFF;">,</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">get_user_info</span><span style="color:#89DDFF;">())</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 最终原理就是</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># wrapper = auth(&quot;admin&quot;)</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># get_user_info = wrapper(get_user_info)</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># get_user_info()</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h2 id="多个装饰器" tabindex="-1">多个装饰器 <a class="header-anchor" href="#多个装饰器" aria-label="Permalink to &quot;多个装饰器&quot;">​</a></h2><p>如果存在多个装饰器，他们的执行顺序为从上到下优先级排列，执行完毕的顺序则为从下到上。</p><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">wrapper1</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">inner</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wrapper1 开始</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">(*</span><span style="color:#82AAFF;">args</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">**</span><span style="color:#82AAFF;">kwargs</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wrapper1 结束</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> inner</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">wrapper2</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">inner</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wrapper2 开始</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">(*</span><span style="color:#82AAFF;">args</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">**</span><span style="color:#82AAFF;">kwargs</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wrapper2 结束</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> inner</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">wrapper3</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">func</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">inner</span><span style="color:#89DDFF;">(*</span><span style="color:#A6ACCD;font-style:italic;">args</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">**</span><span style="color:#A6ACCD;font-style:italic;">kwargs</span><span style="color:#89DDFF;">):</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wrapper3 开始</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">(*</span><span style="color:#82AAFF;">args</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#89DDFF;">**</span><span style="color:#82AAFF;">kwargs</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">wrapper4 结束</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> inner</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">wrapper3</span></span>\n<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">wrapper2</span></span>\n<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#82AAFF;">wrapper1</span></span>\n<span class="line"><span style="color:#C792EA;">def</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">():</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ji ji ji</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#82AAFF;">func</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 结果</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># wrapper3 开始</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># wrapper2 开始</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># wrapper1 开始</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># ji ji ji</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># wrapper1 结束</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># wrapper2 结束</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># wrapper4 结束</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div>',22)];const r=s(o,[["render",function(s,l,p,o,r,c){return n(),a("div",null,e)}]]);export{p as __pageData,r as default};
