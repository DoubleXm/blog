import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.45bffcbf.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"docs/py/basic/网络编程.md","lastUpdated":1693378431000}'),e={name:"docs/py/basic/网络编程.md"},o=[l('<h2 id="socket" tabindex="-1">socket <a class="header-anchor" href="#socket" aria-label="Permalink to &quot;socket&quot;">​</a></h2><p><code>Socket</code> 又称&quot;套接字&quot;，应用程序通常通过&quot;套接字&quot;向网络发出请求或者应答网络请求，<strong>使主机间或者一台计算机上的进程间可以通讯</strong></p><h2 id="创建-socket" tabindex="-1">创建 socket <a class="header-anchor" href="#创建-socket" aria-label="Permalink to &quot;创建 socket&quot;">​</a></h2><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> socket</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">s </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> socket</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">socket</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">family</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> proto</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><ul><li><code>family</code>: 套接字家族可以是 <code>AF_UNIX</code>(适用于本机多进程通信) 或者 <code>AF_INET</code>(IPv4 协议)</li><li><code>type</code>: 套接字类型可以根据是面向连接的还是非连接分为 <code>SOCK_STREAM</code>(用于面向连接的 TCP 协议, 可靠字节流) 或 <code>SOCK_DGRAM</code>(用于无连接的 UDP 协议, 不可靠字节流)</li><li><code>proto</code>: 一般不填默认为 0.</li></ul><h2 id="内置方法" tabindex="-1">内置方法 <a class="header-anchor" href="#内置方法" aria-label="Permalink to &quot;内置方法&quot;">​</a></h2><table><thead><tr><th>方法名</th><th style="text-align:center;">描述</th><th style="text-align:right;">示例</th></tr></thead><tbody><tr><td>服务端方法</td><td style="text-align:center;"></td><td style="text-align:right;"></td></tr><tr><td><code>bind()</code></td><td style="text-align:center;">绑定地址到套接字， 在 <code>AF_INET</code> 下,以元组的形式表示地址。</td><td style="text-align:right;"><code>bind((host, port))</code></td></tr><tr><td><code>listen()</code></td><td style="text-align:center;">开始 TCP 监听。该值至少为 1，大部分应用程序设为 5 就可以了。</td><td style="text-align:right;"><code>listen(1)</code></td></tr><tr><td><code>accept()</code></td><td style="text-align:center;">被动接受 TCP 客户端连接,(阻塞式)等待连接的到来</td><td style="text-align:right;"><code>conn, addr = accpet()</code></td></tr><tr><td>客户端方法</td><td style="text-align:center;"></td><td style="text-align:right;"></td></tr><tr><td><code>connect()</code></td><td style="text-align:center;">主动初始化 TCP 服务器连接。如果连接出错，返回 socket.error 错误。</td><td style="text-align:right;"><code>connect((host, port))</code></td></tr><tr><td>通用方法</td><td style="text-align:center;"><strong>注意：服务端调用时需要使用 <code>conn</code> 对象</strong></td><td style="text-align:right;"></td></tr><tr><td><code>recv()</code></td><td style="text-align:center;">接收 TCP 数据，数据以字符串形式返回, 注意解码</td><td style="text-align:right;"><code>msg = s.recv(1024).decode(&quot;utf-8&quot;)</code></td></tr><tr><td><code>send()</code></td><td style="text-align:center;">发送 TCP 数据，将 string 中的数据发送到连接的套接字。注意编码</td><td style="text-align:right;"><code>s.send(msg.encode(&quot;utf-8&quot;))</code></td></tr></tbody></table><h2 id="聊天室案例" tabindex="-1">聊天室案例 <a class="header-anchor" href="#聊天室案例" aria-label="Permalink to &quot;聊天室案例&quot;">​</a></h2><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-4yCiZ" id="tab-MTWQAuC" checked="checked"><label for="tab-MTWQAuC">server.py</label><input type="radio" name="group-4yCiZ" id="tab-j5HCoKz"><label for="tab-j5HCoKz">client.py</label></div><div class="blocks"><div class="language-py active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> socket</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 创建 server 对象</span></span>\n<span class="line"><span style="color:#A6ACCD;">socket_server </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> socket</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">socket</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">socket</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">AF_INET</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> socket</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">SOCK_STREAM</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 绑定 ip 端口</span></span>\n<span class="line"><span style="color:#A6ACCD;">socket_server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">bind</span><span style="color:#89DDFF;">((</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.0.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#89DDFF;">))</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 设置连接数</span></span>\n<span class="line"><span style="color:#A6ACCD;">socket_server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">listen</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 建议 socket 连接</span></span>\n<span class="line"><span style="color:#A6ACCD;">conn</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> addr </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> socket_server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">accept</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True:</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 对客户端发送信息</span></span>\n<span class="line"><span style="color:#A6ACCD;">    msg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">input</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">输入对客户端发送的消息：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">encode</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    conn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">msg</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 接收客户端的信息</span></span>\n<span class="line"><span style="color:#A6ACCD;">    client_msg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> conn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">recv</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">decode</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;接收客户端消息：</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">client_msg</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 如果客户端发来 exit, 则关闭 socket</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> client_msg </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">exit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">break</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 关闭 socket 连接</span></span>\n<span class="line"><span style="color:#A6ACCD;">socket_server</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><div class="language-py line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">py</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> socket</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 创建 client 对象</span></span>\n<span class="line"><span style="color:#A6ACCD;">socket_client </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> socket</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">socket</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">socket</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">AF_INET</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> socket</span><span style="color:#89DDFF;">.</span><span style="color:#F07178;">SOCK_STREAM</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 与服务端建立连接</span></span>\n<span class="line"><span style="color:#A6ACCD;">socket_client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">connect</span><span style="color:#89DDFF;">((</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">0.0.0.0</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#82AAFF;"> </span><span style="color:#F78C6C;">3000</span><span style="color:#89DDFF;">))</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">True:</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 接收 server 端数据</span></span>\n<span class="line"><span style="color:#A6ACCD;">    server_msg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> socket_client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">recv</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1024</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">decode</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#82AAFF;">print</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">f</span><span style="color:#C3E88D;">&quot;接收服务端消息：</span><span style="color:#F78C6C;">{</span><span style="color:#82AAFF;">server_msg</span><span style="color:#F78C6C;">}</span><span style="color:#C3E88D;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 如果 server 发来 exit, 同样像服务端也发送此消息。并关闭客户端连接</span></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> server_msg </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">exit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">:</span></span>\n<span class="line"><span style="color:#A6ACCD;">      socket_client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">exit</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">encode</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">))</span></span>\n<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#89DDFF;font-style:italic;">break</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#676E95;font-style:italic;"># 像服务端发送数据</span></span>\n<span class="line"><span style="color:#A6ACCD;">    msg </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">input</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">输入对服务端发送的消息：</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">).</span><span style="color:#82AAFF;">encode</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">utf-8</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"><span style="color:#A6ACCD;">    socket_client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">send</span><span style="color:#89DDFF;">(</span><span style="color:#82AAFF;">msg</span><span style="color:#89DDFF;">)</span></span>\n<span class="line"></span>\n<span class="line"></span>\n<span class="line"><span style="color:#676E95;font-style:italic;"># 关闭 socket 连接</span></span>\n<span class="line"><span style="color:#A6ACCD;">socket_client</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">close</span><span style="color:#89DDFF;">()</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div></div></div>',9)];const t=s(e,[["render",function(s,l,p,e,t,c){return n(),a("div",null,o)}]]);export{p as __pageData,t as default};
