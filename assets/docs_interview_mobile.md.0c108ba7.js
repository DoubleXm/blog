import{_ as s,o as n,c as a,Q as l}from"./chunks/framework.45bffcbf.js";const o=JSON.parse('{"title":"","description":"","frontmatter":{"layout":"doc"},"headers":[],"relativePath":"docs/interview/mobile.md","lastUpdated":1687189963000}'),p={name:"docs/interview/mobile.md"},e=[l('<h2 id="如何解决-1px-问题" tabindex="-1">如何解决 1px 问题 <a class="header-anchor" href="#如何解决-1px-问题" aria-label="Permalink to &quot;如何解决 1px 问题&quot;">​</a></h2><details class="details custom-block"><summary>伪元素先放大后缩小</summary><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">container</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">after</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;&quot;</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> absolute</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200%</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">200%</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">scale</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">0.5</span><span style="color:#89DDFF;">);</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">transform-origin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> left top</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">box-sizing</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> border-box</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1px</span><span style="color:#A6ACCD;"> solid </span><span style="color:#89DDFF;">#</span><span style="color:#A6ACCD;">ccc</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div></details><h2 id="meta-viewport-的原理是什么" tabindex="-1">Meta viewport 的原理是什么 ？ <a class="header-anchor" href="#meta-viewport-的原理是什么" aria-label="Permalink to &quot;Meta viewport 的原理是什么 ？&quot;">​</a></h2><p>手机浏览器是把页面放在一个虚拟的“窗口”（<code>viewport</code>）中，通常这个虚拟的“窗口”（<code>viewport</code>）比屏幕宽， 这样就不用把每个网页挤到很小的窗口中（这样会破坏没有针对手机浏览器优化的网页的布局），用户可以通过平移和缩放来看网页的不同部分。移动设备默认的 <code>viewport</code> 是 <code>layout viewport</code>，也就是那个比屏幕要宽的 <code>viewport</code>，但在进行移动设备网站的开发时，我们需要的是 <code>ideal viewport</code>。</p><h2 id="移动端的适配-rem-媒体查询-meta-头设置。" tabindex="-1">移动端的适配，rem+媒体查询/meta 头设置。 <a class="header-anchor" href="#移动端的适配-rem-媒体查询-meta-头设置。" aria-label="Permalink to &quot;移动端的适配，rem+媒体查询/meta 头设置。&quot;">​</a></h2><h2 id="click-在-ios-上有-300ms-延迟-原因如何及如何解决。" tabindex="-1"><code>click</code> 在 <code>ios</code> 上有 <code>300ms</code> 延迟，原因如何及如何解决。 <a class="header-anchor" href="#click-在-ios-上有-300ms-延迟-原因如何及如何解决。" aria-label="Permalink to &quot;`click` 在 `ios` 上有 `300ms` 延迟，原因如何及如何解决。&quot;">​</a></h2><p><strong>原因</strong>：当用户一次点击屏幕之后，浏览器并不能立刻判断用户是要进行双击缩放，还是想要进行单击操作。因此，<code>iOS Safari</code> 就等待 <code>300</code> 毫秒，以判断用户是否再次点击了屏幕。</p><ul><li><p><a href="https://github.com/ftlabs/fastclick" target="_blank" rel="noreferrer"><code>faskclick</code></a>：在检测到 <code>touchend</code> 事件的时候，会通过 DOM 自定义事件立即出发模拟一个<code>click</code>事件，并把浏览器在 <code>300ms</code> 之后真正的 <code>click</code> 事件阻止掉。<strong>缺点是脚本相对较大, 不建议使用</strong></p></li><li><p>禁止浏览器缩放，表明这个页面是不可缩放的，那双击缩放的功能就没有意义了，<strong>缺点就是完全禁用了缩放比如方法图片，文字等</strong>类似于一刀切了。</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">user-scalable=no</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">initial-scale=1, maximum-scale=1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div></li><li><p>更改默认的视口宽带，如果设置了上述 <code>meta</code> 标签，那浏览器就可以认为该网站已经对移动端做过了适配和优化，就无需双击缩放操作了</p><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">meta</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">name</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">viewport</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">content</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">width=device-width</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> /&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></li><li><p>通过 <code>touchstart</code> 和 <code>touchend</code> 模拟实现；把页面内所有 <code>click</code> 全部换成 <code>touch</code> 事件 <code>touchstart 、touchend、tap</code>， 需要特别注意 <code>a</code> 标签，<code>a</code> 标签的 <code>href</code> 也是 <code>click</code>，需要去掉换成 <code>js</code> 控制的跳转，或者直接改成 <code>span + tap</code> 控制跳转。</p></li></ul><h2 id="什么是点击穿透-怎么解决" tabindex="-1">什么是点击穿透？怎么解决？ <a class="header-anchor" href="#什么是点击穿透-怎么解决" aria-label="Permalink to &quot;什么是点击穿透？怎么解决？&quot;">​</a></h2><p>移动端的开发经常需要监听用户的 <code>touch</code> 行为，在移动端主要有以下几个 <code>touch</code> 事件：</p><ol><li><code>touchstart</code> 手指触摸屏幕时触发，即使已经有手指在屏幕上也会触发</li><li><code>touchmove</code> 手指在屏幕滑动时触发</li><li><code>touchend</code> 手指从屏幕时移开时触发</li><li><code>touchcancel</code> 当触控点被特定的实现方式打乱时触发（例如，弹框），一般不用</li></ol><p>移动端的事件的发生顺序一般是：<code>touchstart---touchmove---touchend</code>，然后大约过 <code>300ms</code> 会模拟鼠标触发 <code>click</code> 事件</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>点击穿透就是在发生触摸动作约 <code>300ms</code> 之后，移动端会模拟产生 <code>click</code> 动作，它底下的具有点击特性的元素也会被触发，这种现象称为点击穿透。</p><p>发生的条件：</p><ul><li>上层元素监听了触摸事件，触摸之后该层元素消失</li><li>下层元素具有点击特性（监听了 <code>click</code> 事件或默认的特性（<code>a</code> 标签、<code>input、button</code> 标签））</li></ul><p>解决方案：</p><ol><li>阻止上层元素的默认动作 <code>event.preventDefault();</code></li><li>全局阻止默认行为，在 <code>document</code> 元素内阻止，给 <code>addEventListener</code> 设置第三参数</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">passive</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">        </span><span style="color:#676E95;font-style:italic;">//阻止默认行为</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">capture</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">/</span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">   </span><span style="color:#676E95;font-style:italic;">//事件是否在捕获阶段触发</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">once</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">/</span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;">      </span><span style="color:#676E95;font-style:italic;">//事件是否只触发一次</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ol start="3"><li>不使用具有点击特性的元素，比如 <code>a</code> 标签默认跳转替换为 <code>js</code> 跳转</li><li>利用 <code>css</code> 属性 <code>pointer-events</code></li></ol><ul><li><code>auto</code> 效果和没有定义 <code>pointer-events</code> 属性相同，鼠标不会穿透当前层。在 <code>SVG</code> 中，该值和 <code>visiblePainted</code> 的效果相同。</li><li><code>none</code> 元素不再是鼠标事件的目标，鼠标不再监听当前层而去监听下面的层中的元素。但是如果它的子元素设置了 <code>pointer-events</code> 为其它值，比如 <code>auto</code>，鼠标还是会监听这个子元素的。</li></ul><ol start="5"><li>让上层元素不立即消失，等到模拟 <code>click</code> 动作约 <code>300ms</code> 之后再消失</li></ol><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//获取弹框</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">modalBg</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#modalBg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">closeBtn</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelector</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">#closeBtn</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">var</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">aNodes</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">document</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">querySelectorAll</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">.links a</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//按钮触摸事件 touchend</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">closeBtn</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">addEventListener</span><span style="color:#F07178;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">touchend</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">event</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//等一会再消失</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">setTimeout</span><span style="color:#F07178;">(</span><span style="color:#C792EA;">function</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">()</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>\n<span class="line"><span style="color:#F07178;">      </span><span style="color:#A6ACCD;">modalBg</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">remove</span><span style="color:#F07178;">()</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">},</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">350</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#F07178;">)</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)()</span><span style="color:#89DDFF;">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div></div>',13)];const c=s(p,[["render",function(s,l,o,p,c,t){return n(),a("div",null,e)}]]);export{o as __pageData,c as default};
