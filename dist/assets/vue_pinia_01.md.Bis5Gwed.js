import{_ as n,c as a,o as p,ag as l}from"./chunks/framework.BPQUDke-.js";const e="/blog/vue/pinia/01.jpg",o="/blog/vue/pinia/02.jpg",u=JSON.parse('{"title":"Pinia 知识铺垫及简单 Demo","description":"","frontmatter":{"outline":[2,3,4]},"headers":[],"relativePath":"vue/pinia/01.md","filePath":"vue/pinia/01.md","lastUpdated":1740476554000}'),c={name:"vue/pinia/01.md"};function r(t,s,E,y,i,C){return p(),a("div",null,s[0]||(s[0]=[l(`<h1 id="pinia-知识铺垫及简单-demo" tabindex="-1">Pinia 知识铺垫及简单 Demo <a class="header-anchor" href="#pinia-知识铺垫及简单-demo" aria-label="Permalink to &quot;Pinia 知识铺垫及简单 Demo&quot;">​</a></h1><h2 id="effectscope" tabindex="-1">effectScope <a class="header-anchor" href="#effectscope" aria-label="Permalink to &quot;effectScope&quot;">​</a></h2><p>创建一个 effect 作用域（实际上 setup 也算作一个作用域），可以捕获其中所创建的响应式副作用 (即计算属性和侦听器)，这样捕获到的副作用可以一起处理。</p><div class="language-ts line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki slack-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#569CD6;">function</span><span style="color:#DCDCAA;"> effectScope</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">detached</span><span style="color:#D4D4D4;">?:</span><span style="color:#4EC9B0;"> boolean</span><span style="color:#E6E6E6;">)</span><span style="color:#D4D4D4;">:</span><span style="color:#4EC9B0;"> EffectScope</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">interface</span><span style="color:#4EC9B0;"> EffectScope</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#DCDCAA;">  run</span><span style="color:#E6E6E6;">&lt;</span><span style="color:#4EC9B0;">T</span><span style="color:#E6E6E6;">&gt;(</span><span style="color:#DCDCAA;">fn</span><span style="color:#D4D4D4;">:</span><span style="color:#E6E6E6;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#4EC9B0;"> T</span><span style="color:#E6E6E6;">)</span><span style="color:#D4D4D4;">:</span><span style="color:#4EC9B0;"> T</span><span style="color:#D4D4D4;"> |</span><span style="color:#4EC9B0;"> undefined</span><span style="color:#6A9955;"> // 如果作用域不活跃就为 undefined</span></span>
<span class="line"><span style="color:#DCDCAA;">  stop</span><span style="color:#E6E6E6;">()</span><span style="color:#D4D4D4;">:</span><span style="color:#4EC9B0;"> void</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>以 <code>counter</code> 功能为例；毫无疑问此时的 <code>count</code> 是响应式的。但如果增加一个<strong>停止功能</strong>使一些响应式结束，就需要使用 <code>effectScope</code> 对其改造一下。</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki slack-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">ref</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">computed</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vue&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#9CDCFE;"> count</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> ref</span><span style="color:#E6E6E6;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#9CDCFE;"> doubleCount</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> computed</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> count</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> *</span><span style="color:#B5CEA8;"> 2</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#9CDCFE;"> tripeCount</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> computed</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> count</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> *</span><span style="color:#B5CEA8;"> 3</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#DCDCAA;"> onIncrement</span><span style="color:#D4D4D4;"> =</span><span style="color:#E6E6E6;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> count</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> +=</span><span style="color:#B5CEA8;"> 1</span><span style="color:#E6E6E6;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><code>effectScope</code> 会返回两个方法，<code>run</code> 和 <code>stop</code> 用于控制依赖的收集和停止；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki slack-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">ref</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">computed</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">effectScope</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">effect</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vue&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#9CDCFE;"> scope</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> effectScope</span><span style="color:#E6E6E6;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#9CDCFE;"> count</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> ref</span><span style="color:#E6E6E6;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> doubleCount</span><span style="color:#D4D4D4;"> =</span><span style="color:#569CD6;"> null</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#569CD6;">let</span><span style="color:#9CDCFE;"> tripeCount</span><span style="color:#D4D4D4;"> =</span><span style="color:#569CD6;"> null</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">scope</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">run</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#6A9955;">  // 没有在文档中体现出来的方法，比较底层。执行时机与 watchEffect 类似</span></span>
<span class="line"><span style="color:#6A9955;">  // 但是参数不一样；</span></span>
<span class="line"><span style="color:#6A9955;">  // watch, watchEffect, effect 都基于 ReactiveEffect 实现。</span></span>
<span class="line"><span style="color:#DCDCAA;">  effect</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">    doubleCount</span><span style="color:#D4D4D4;"> =</span><span style="color:#9CDCFE;"> count</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> *</span><span style="color:#B5CEA8;"> 2</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#9CDCFE;">    tripeCount</span><span style="color:#D4D4D4;"> =</span><span style="color:#9CDCFE;"> count</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> *</span><span style="color:#B5CEA8;"> 3</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#E6E6E6;">  });</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#DCDCAA;"> onStop</span><span style="color:#D4D4D4;"> =</span><span style="color:#E6E6E6;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> scope</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">stop</span><span style="color:#E6E6E6;">();</span></span>
<span class="line"><span style="color:#6A9955;">// ....</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><p>还需要明白，<code>stop</code> 只会终止当前作用域中的副作用；假设把 <code>tripeCount</code> 抽离到另一个作用域中；此时的 <code>stop</code> 只会对 <code>doubleCount</code> 生效；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki slack-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">ref</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">computed</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">effectScope</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">effect</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vue&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#9CDCFE;"> scope</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> effectScope</span><span style="color:#E6E6E6;">();</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#9CDCFE;"> subScope</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> effectScope</span><span style="color:#E6E6E6;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">scope</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">run</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#DCDCAA;">  effect</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">    doubleCount</span><span style="color:#D4D4D4;"> =</span><span style="color:#9CDCFE;"> count</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> *</span><span style="color:#B5CEA8;"> 2</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#E6E6E6;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">  subScope</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">run</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#DCDCAA;">    effect</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      tripeCount</span><span style="color:#D4D4D4;"> =</span><span style="color:#9CDCFE;"> count</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> *</span><span style="color:#B5CEA8;"> 3</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#E6E6E6;">    });</span></span>
<span class="line"><span style="color:#E6E6E6;">  });</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">scope</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">stop</span><span style="color:#E6E6E6;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><p>如果换种方式，将 <code>subScope</code> 在 <code>scope</code> 中声明，则会被当做 <code>scope</code> 的作用域。此时可以通过参数来确定是否需要独立的作用域；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki slack-dark has-diff vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">ref</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">computed</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">effectScope</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">effect</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vue&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#9CDCFE;"> scope</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> effectScope</span><span style="color:#E6E6E6;">();</span></span>
<span class="line diff remove"><span style="color:#569CD6;">const</span><span style="color:#9CDCFE;"> subScope</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> effectScope</span><span style="color:#E6E6E6;">(); </span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">scope</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">run</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line diff add"><span style="color:#569CD6;">  const</span><span style="color:#9CDCFE;"> subScope</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> effectScope</span><span style="color:#E6E6E6;">(); </span></span>
<span class="line"><span style="color:#DCDCAA;">  effect</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">    doubleCount</span><span style="color:#D4D4D4;"> =</span><span style="color:#9CDCFE;"> count</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> *</span><span style="color:#B5CEA8;"> 2</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#E6E6E6;">  });</span></span>
<span class="line"></span>
<span class="line"><span style="color:#9CDCFE;">  subScope</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">run</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#DCDCAA;">    effect</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">      tripeCount</span><span style="color:#D4D4D4;"> =</span><span style="color:#9CDCFE;"> count</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> *</span><span style="color:#B5CEA8;"> 3</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#E6E6E6;">    });</span></span>
<span class="line"><span style="color:#E6E6E6;">  });</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// 此时的 stop 会将两个 scope 全部停止;</span></span>
<span class="line"><span style="color:#6A9955;">// 但是 const subScope = effectScope(true) 时, </span></span>
<span class="line"><span style="color:#6A9955;">// subScope 就会重新开辟一个作用域，不再受 scope 的约束</span></span>
<span class="line"><span style="color:#9CDCFE;">scope</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">stop</span><span style="color:#E6E6E6;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><h2 id="plugin-插件" tabindex="-1">Plugin (插件) <a class="header-anchor" href="#plugin-插件" aria-label="Permalink to &quot;Plugin (插件)&quot;">​</a></h2><p>在 Vue 中插件的使用方式 <code>app.use()</code> 接受两个参数 <code>app</code> 和 <code>options</code>；</p><p>插件的实现方式有两种：</p><ul><li>带有 <code>install</code> 方法的对象</li><li>返回带有 <code>install</code> 方法对象的方法。</li></ul><p>需要知道是，<code>app.use</code> 的第二个参数会传给 <code>install()</code> 作为第二个参数；同一个插件多次注册，也只会被注册一次；</p><p>以 <code>Counter</code> 组件为例；常规的项目中，在使用时总是需要导入这个组件，并且使用；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki slack-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// 在 setup 语法中只是需要导入，其他方式可能还要注册更加麻烦。</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#9CDCFE;"> Counter</span><span style="color:#C586C0;"> from</span><span style="color:#CE9178;"> &#39;./components/Counter.vue&#39;</span><span style="color:#E6E6E6;">;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>解决以上问题的方式有很多，如果限定通过插件的方式呢？</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki slack-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#6A9955;">// src/main.js</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">createApp</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vue&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#9CDCFE;"> App</span><span style="color:#C586C0;"> from</span><span style="color:#CE9178;"> &#39;./App.vue&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#9CDCFE;"> counter</span><span style="color:#C586C0;"> from</span><span style="color:#CE9178;"> &#39;./plugins/counter&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#9CDCFE;"> app</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> createApp</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">App</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">use</span><span style="color:#E6E6E6;">(</span><span style="color:#DCDCAA;">counter</span><span style="color:#E6E6E6;">(), { </span><span style="color:#9CDCFE;">delay:</span><span style="color:#B5CEA8;"> 5000</span><span style="color:#E6E6E6;"> });</span></span>
<span class="line"><span style="color:#9CDCFE;">app</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">mount</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;#app&#39;</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">// src/plugins/counter.js</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#9CDCFE;"> Counter</span><span style="color:#C586C0;"> from</span><span style="color:#CE9178;"> &#39;../components/Counter.vue&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#569CD6;"> function</span><span style="color:#DCDCAA;"> counter</span><span style="color:#E6E6E6;"> () {</span></span>
<span class="line"><span style="color:#C586C0;">  return</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#DCDCAA;">    install</span><span style="color:#E6E6E6;"> (</span><span style="color:#9CDCFE;">app</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#E6E6E6;">) {</span></span>
<span class="line"><span style="color:#6A9955;">      // app 即为整个应用的实例, 注册的组件也为全局组件</span></span>
<span class="line"><span style="color:#6A9955;">      // 在此处将 Counter 组件注册。避免后续一直 import</span></span>
<span class="line"><span style="color:#9CDCFE;">      app</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">component</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;Counter&#39;</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">Counter</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A9955;">      // { delay: 5000 }</span></span>
<span class="line"><span style="color:#9CDCFE;">      console</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">options</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"><span style="color:#E6E6E6;">    }</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><p>当然了，<code>install</code> 的 <code>app</code> 不只是能注册组件，你可以在里面使用各种功能比如 <code>provide mixin directive...</code> 它是 Vue 的实例。</p><p>如果你想要把一些参数提前传递给 <code>Counter</code> 可以在注册组件时为其添加；</p><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki slack-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#9CDCFE;"> Counter</span><span style="color:#C586C0;"> from</span><span style="color:#CE9178;"> &#39;../components/Counter.vue&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#C586C0;"> default</span><span style="color:#569CD6;"> function</span><span style="color:#DCDCAA;"> counter</span><span style="color:#E6E6E6;"> () {</span></span>
<span class="line"><span style="color:#C586C0;">  return</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#DCDCAA;">    install</span><span style="color:#E6E6E6;"> (</span><span style="color:#9CDCFE;">app</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">options</span><span style="color:#E6E6E6;">) {</span></span>
<span class="line"><span style="color:#9CDCFE;">      app</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">provide</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;delay&#39;</span><span style="color:#E6E6E6;">, </span><span style="color:#B5CEA8;">2000</span><span style="color:#E6E6E6;">); </span></span>
<span class="line"><span style="color:#9CDCFE;">      app</span><span style="color:#E6E6E6;">.</span><span style="color:#DCDCAA;">component</span><span style="color:#E6E6E6;">( </span></span>
<span class="line"><span style="color:#CE9178;">        &#39;Counter&#39;</span><span style="color:#E6E6E6;">, </span></span>
<span class="line"><span style="color:#E6E6E6;">        {  </span></span>
<span class="line"><span style="color:#D4D4D4;">          ...</span><span style="color:#9CDCFE;">Counter</span><span style="color:#E6E6E6;">, </span></span>
<span class="line"><span style="color:#9CDCFE;">          props:</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">delay:</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">type:</span><span style="color:#9CDCFE;"> Number</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">default:</span><span style="color:#9CDCFE;"> options</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">delay</span><span style="color:#E6E6E6;"> } } </span></span>
<span class="line"><span style="color:#E6E6E6;">        } </span></span>
<span class="line"><span style="color:#E6E6E6;">      ); </span></span>
<span class="line"><span style="color:#E6E6E6;">    }</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"><span style="color:#E6E6E6;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="pinia-demo" tabindex="-1">Pinia Demo <a class="header-anchor" href="#pinia-demo" aria-label="Permalink to &quot;Pinia Demo&quot;">​</a></h2><p>下载并注册插件</p><div class="language-bash line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki slack-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#DCDCAA;">pnpm</span><span style="color:#CE9178;"> add</span><span style="color:#CE9178;"> pinia</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki slack-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#9CDCFE;"> App</span><span style="color:#C586C0;"> from</span><span style="color:#CE9178;"> &#39;./App.vue&#39;</span><span style="color:#E6E6E6;">; </span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">createApp</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vue&#39;</span><span style="color:#E6E6E6;">; </span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">createPinia</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;pinia&#39;</span><span style="color:#E6E6E6;">; </span></span>
<span class="line"></span>
<span class="line"><span style="color:#DCDCAA;">createApp</span><span style="color:#E6E6E6;">(</span><span style="color:#9CDCFE;">App</span><span style="color:#E6E6E6;">) </span></span>
<span class="line"><span style="color:#E6E6E6;">  .</span><span style="color:#DCDCAA;">use</span><span style="color:#E6E6E6;">(</span><span style="color:#DCDCAA;">createPinia</span><span style="color:#E6E6E6;">()) </span></span>
<span class="line"><span style="color:#E6E6E6;">  .</span><span style="color:#DCDCAA;">mount</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;#app&#39;</span><span style="color:#E6E6E6;">);</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p><strong>注意 <code>createPinia</code> 的返回到底是什么</strong></p><p><img src="`+e+`" alt="01-pinia"></p><ul><li>install: 注册函数。</li><li>use: install 阶段之前的插件保存在 toBeInstalled 中, install 的过程中会将 toBeInstalled 转移到 _p 中。</li><li>_p: 插件集合</li><li>_a: 当前 Vue 实例</li><li>_e: effectScope 副作用空间，用于存储所有 store 的副作用函数 (getters)，并且每个 store 会在 _e 中单独声明，方便统一管理（销毁等）</li><li>_s: map 数据结构，保存所有 store，store 的 id 作为 key; 实例为 value; 存储每个 store</li><li>state: 保存所有的 store 数据，store 的 id 作为 key; state 为 value; 用于存储 store 的所有可访问变量。</li></ul><h3 id="counter-options-demo" tabindex="-1">counter options demo <a class="header-anchor" href="#counter-options-demo" aria-label="Permalink to &quot;counter options demo&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki slack-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">defineStore</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;pinia&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> const</span><span style="color:#9CDCFE;"> useCounter1</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> defineStore</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;counter1&#39;</span><span style="color:#E6E6E6;">, {</span></span>
<span class="line"><span style="color:#DCDCAA;">  state</span><span style="color:#9CDCFE;">:</span><span style="color:#E6E6E6;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> ({</span></span>
<span class="line"><span style="color:#9CDCFE;">    count:</span><span style="color:#E6E6E6;"> []</span></span>
<span class="line"><span style="color:#E6E6E6;">  }),</span></span>
<span class="line"><span style="color:#9CDCFE;">  getters:</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#DCDCAA;">    doubleCount</span><span style="color:#9CDCFE;">:</span><span style="color:#9CDCFE;"> state</span><span style="color:#569CD6;"> =&gt;</span><span style="color:#9CDCFE;"> state</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;"> *</span><span style="color:#B5CEA8;"> 2</span><span style="color:#E6E6E6;">,</span></span>
<span class="line"><span style="color:#E6E6E6;">  },</span></span>
<span class="line"><span style="color:#9CDCFE;">  actions:</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#DCDCAA;">    increment</span><span style="color:#E6E6E6;">() {</span></span>
<span class="line"><span style="color:#569CD6;">      this</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">state</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">++</span></span>
<span class="line"><span style="color:#E6E6E6;">    }</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"><span style="color:#E6E6E6;">})</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h3 id="counter-setup-demo" tabindex="-1">counter setup demo <a class="header-anchor" href="#counter-setup-demo" aria-label="Permalink to &quot;counter setup demo&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki slack-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">defineStore</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;pinia&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">ref</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">computed</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vue&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">export</span><span style="color:#569CD6;"> const</span><span style="color:#9CDCFE;"> useCounter2</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> defineStore</span><span style="color:#E6E6E6;">(</span><span style="color:#CE9178;">&#39;counter2&#39;</span><span style="color:#E6E6E6;">, () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#9CDCFE;"> count</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> ref</span><span style="color:#E6E6E6;">(</span><span style="color:#B5CEA8;">0</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#9CDCFE;"> doubleCount</span><span style="color:#D4D4D4;"> =</span><span style="color:#DCDCAA;"> computed</span><span style="color:#E6E6E6;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> count</span><span style="color:#D4D4D4;"> *</span><span style="color:#B5CEA8;"> 2</span><span style="color:#E6E6E6;">);</span></span>
<span class="line"><span style="color:#569CD6;">  const</span><span style="color:#DCDCAA;"> increment</span><span style="color:#D4D4D4;"> =</span><span style="color:#E6E6E6;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#9CDCFE;"> count</span><span style="color:#E6E6E6;">.</span><span style="color:#9CDCFE;">value</span><span style="color:#D4D4D4;"> +=</span><span style="color:#B5CEA8;"> 1</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C586C0;">  return</span><span style="color:#E6E6E6;"> {</span></span>
<span class="line"><span style="color:#9CDCFE;">    count</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">doubleCount</span><span style="color:#E6E6E6;">, </span><span style="color:#9CDCFE;">increment</span></span>
<span class="line"><span style="color:#E6E6E6;">  }</span></span>
<span class="line"><span style="color:#E6E6E6;">});</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h3 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki slack-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">useCounter1</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;./store/counter1&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">useCounter2</span><span style="color:#E6E6E6;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;./store/counter2&#39;</span><span style="color:#E6E6E6;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">counter</span><span style="color:#E6E6E6;">: </span><span style="color:#9CDCFE;">counter1</span><span style="color:#E6E6E6;"> } </span><span style="color:#D4D4D4;">=</span><span style="color:#DCDCAA;"> useCounter1</span><span style="color:#E6E6E6;">();</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#E6E6E6;"> { </span><span style="color:#9CDCFE;">counter</span><span style="color:#E6E6E6;">: </span><span style="color:#9CDCFE;">counter2</span><span style="color:#E6E6E6;"> } </span><span style="color:#D4D4D4;">=</span><span style="color:#DCDCAA;"> useCounter2</span><span style="color:#E6E6E6;">();</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><p>使用之后可以看出在实例的 <code>_e, _s, state</code> 中已经存在了对应的数据, 也就是说只有当用户 use 的时候数据才会被填充进 store 中</p><p><img src="`+o+`" alt="02-pinia"></p><h3 id="counter-视图-demo" tabindex="-1">counter 视图 demo <a class="header-anchor" href="#counter-视图-demo" aria-label="Permalink to &quot;counter 视图 demo&quot;">​</a></h3><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki slack-dark vp-code" tabindex="0"><code><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">button</span><span style="color:#9CDCFE;"> @click</span><span style="color:#E6E6E6;">=</span><span style="color:#CE9178;">&quot;increment&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#E6E6E6;">{{ store.count }}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">  &lt;</span><span style="color:#569CD6;">span</span><span style="color:#9CDCFE;"> style</span><span style="color:#E6E6E6;">=</span><span style="color:#CE9178;">&quot;padding-left: 10px&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#E6E6E6;">{{ store.doubleCount }}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">script</span><span style="color:#9CDCFE;"> setup</span><span style="color:#808080;">&gt;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">ref</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;vue&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#C586C0;">import</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">useCounter1</span><span style="color:#D4D4D4;"> } </span><span style="color:#C586C0;">from</span><span style="color:#CE9178;"> &#39;../store/counter1&#39;</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#9CDCFE;"> store</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">useCounter1</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">increment</span><span style="color:#D4D4D4;"> } = </span><span style="color:#DCDCAA;">useCounter1</span><span style="color:#D4D4D4;">();</span></span>
<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div>`,41)]))}const b=n(c,[["render",r]]);export{u as __pageData,b as default};
